scale_size(range = c(0, 6), name="Log Number of Books") +
scale_color_viridis(discrete=FALSE, guide=FALSE)+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, fill = score, size = log_books)) +
geom_point(alpha=0.5, shape = 21) +
scale_size(range = c(0, 6), name="Log Number of Books") +
scale_color_viridis(discrete=TRUE, guide=FALSE)+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.5, shape = 21) +
scale_size(range = c(0, 6), name="Log Number of Books") +
scale_color_viridis(discrete=TRUE, guide=FALSE)+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.5, shape = 21) +
scale_size(range = c(0, 6), name="Log Number of Books") +
scale_color_viridis(discrete=FALSE, guide=FALSE)+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.5, shape = 22) +
scale_size(range = c(0, 6), name="Log Number of Books") +
scale_color_viridis(discrete=FALSE, guide=FALSE)+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.5) +
scale_size(range = c(0, 6), name="Log Number of Books") +
scale_color_viridis(discrete=FALSE, guide=FALSE)+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.8) +
scale_size(range = c(0, 6), name="Log Number of Books") +
scale_color_viridis(discrete=FALSE, guide=FALSE)+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.7) +
scale_size(range = c(0, 6), name="Log Number of Books") +
scale_color_viridis(discrete=FALSE, guide=FALSE)+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.5) +
scale_size(range = c(0, 6), name="Log Number of Books") +
scale_color_viridis(discrete=FALSE, guide=FALSE)+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.8) +
scale_size(range = c(0, 6), name="Log Number of Books") +
scale_color_viridis(discrete=FALSE, guide=FALSE)+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.6) +
scale_size(range = c(0, 6), name="Log Number of Books") +
scale_color_viridis(discrete=FALSE, guide=FALSE)+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
languages2 <-
languages %>%
mutate(log_users = log(number_of_users + 1)) %>%
filter(log_users > 0) %>% #removing programming languages with no users
mutate(log_books = log(book_count + 1)) %>%
mutate(website2 = ifelse(website == github_repo, yes = NA, no = website))  %>% #making a new website column where github_repo isn't repeated
mutate(dupes = website == github_repo) %>% #making a column to quickly navigate to the rows that have duplicate entries
mutate(score = as.integer(!is.na(website2)) + as.integer(!is.na(github_repo)))) %>%
languages2 <-
languages %>%
mutate(log_users = log(number_of_users + 1)) %>%
filter(log_users > 0) %>% #removing programming languages with no users
mutate(log_books = log(book_count + 1)) %>%
mutate(website2 = ifelse(website == github_repo, yes = NA, no = website))  %>% #making a new website column where github_repo isn't repeated
mutate(dupes = website == github_repo) %>% #making a column to quickly navigate to the rows that have duplicate entries
mutate(score = as.integer(!is.na(website2)) + as.integer(!is.na(github_repo))) %>%
filter(appeared >= 1957) %>%
select(title, appeared, log_users, wikipedia, log_books, website2, github_repo, score, dupes, book_count) %>%
arrange(desc(log_users))
summary(languages2)
head(languages2)
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.6) +
scale_size(range = c(0, 6), name="Log Number of Books") +
scale_color_viridis(discrete=FALSE, guide=FALSE)+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.6) +
scale_size(range = c(0, 6), name="Log Number of Books") +
scale_color_viridis()+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = log_books)) +
geom_point(alpha=0.6) +
scale_color_viridis()+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = book_count)) +
geom_point(alpha=0.6) +
scale_color_viridis()+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = book_count)) +
geom_point(alpha=0.6) +
scale_color_viridis()+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = log_book)) +
geom_point(alpha=0.6) +
scale_color_viridis()+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = book_count)) +
geom_point(alpha=0.6) +
scale_color_viridis()+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = log_books)) +
geom_point(alpha=0.6) +
scale_color_viridis()+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.6) +
scale_size(range = c(0, 6), name="Log Number of Books") +
scale_color_viridis()+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.6) +
scale_size(range = c(0, 6), name="Log Number of Books") +
scale_color_viridis(discrete = T)+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
languages2 <-
languages %>%
mutate(log_users = log(number_of_users + 1)) %>%
filter(log_users > 0) %>% #removing programming languages with no users
mutate(log_books = log(book_count + 1)) %>%
mutate(website2 = ifelse(website == github_repo, yes = NA, no = website))  %>% #making a new website column where github_repo isn't repeated
mutate(dupes = website == github_repo) %>% #making a column to quickly navigate to the rows that have duplicate entries
mutate(score = as.factor(as.integer(!is.na(website2)) + as.integer(!is.na(github_repo)))) %>%
filter(appeared >= 1957) %>%
select(title, appeared, log_users, wikipedia, log_books, website2, github_repo, score, dupes, book_count) %>%
arrange(desc(log_users))
summary(languages2)
head(languages2)
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.6) +
scale_size(range = c(0, 6), name="Log Number of Books") +
scale_color_viridis(discrete = T)+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = log_books, size = score)) +
geom_point(alpha=0.6) +
scale_size(range = c(0, 6), name="Log Number of Books") +
scale_color_viridis()+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = log_books, size = score)) +
geom_point(alpha=0.6) +
scale_size(range = c(0, 6), name="Log Number of Books") +
scale_color_viridis(discrete = none)+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = log_books, size = score)) +
geom_point(alpha=0.6) +
scale_size(range = c(0, 6), name="Log Number of Books") +
scale_color_viridis(discrete = F)+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = log_books, size = score)) +
geom_point(alpha=0.6) +
scale_size(range = c(0, 2), name="Website and/or GitHub presence") +
scale_color_viridis()+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = log_books, size = score)) +
geom_point(alpha=0.6) +
scale_size(range = c(0, 2), name="Website and/or GitHub presence") +
scale_color_viridis(discrete = T, option = "magma")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books) +
geom_point(alpha=0.6) +
scale_size(range = c(0, 2), name="Website and/or GitHub presence") +
scale_color_viridis(discrete = TRUE , option = "magma")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.6) +
scale_size(range = c(0, 2), name="Website and/or GitHub presence") +
scale_color_viridis(discrete = TRUE , option = "magma")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.6) +
scale_size(range = c(1, 3), name="Website and/or GitHub presence") +
scale_color_viridis(discrete = TRUE , option = "magma")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.6) +
scale_size(range = c(1, 3), name="Website and/or GitHub presence") +
scale_color_viridis(discrete = TRUE , option = "rocket")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.6) +
scale_size(range = c(1, 3), name="Website and/or GitHub presence") +
scale_color_viridis(discrete = TRUE , option = "turbo")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.6) +
scale_size(range = c(1, 3), name="Website and/or GitHub presence") +
scale_color_viridis(discrete = TRUE , option = "cividis")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.6) +
scale_size(range = c(1, 10), name="Website and/or GitHub presence") +
scale_color_viridis(discrete = TRUE , option = "cividis")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.6) +
scale_size(range = c(1, 7), name="Website and/or GitHub presence") +
scale_color_viridis(discrete = TRUE , option = "cividis")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.6) +
scale_size(range = c(1, 5), name="Website and/or GitHub presence") +
scale_color_viridis(discrete = TRUE , option = "cividis")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.6) +
scale_size(range = c(1, 5, by = 0.5), name="Website and/or GitHub presence") +
scale_color_viridis(discrete = TRUE , option = "cividis")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.6) +
scale_size(range = c(1, 5), name="Website and/or GitHub presence") +
scale_color_viridis(discrete = TRUE , option = "cividis")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.6) +
scale_size(range = c(1, 8), name="Website and/or GitHub presence") +
scale_color_viridis(discrete = TRUE , option = "cividis")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.6) +
scale_size(range = c(1, 8), name="Log Book Count") +
scale_color_viridis(discrete = TRUE , option = "cividis")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.6) +
scale_size(range = c(1, 8), name="Log Book Count") +
scale_color_viridis(discrete = TRUE , option = "A")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.6) +
scale_size(range = c(1, 8), name="Log Book Count") +
scale_color_viridis(discrete = TRUE , option = "B")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.6) +
scale_size(range = c(1, 8), name="Log Book Count") +
scale_color_viridis(discrete = TRUE , option = "C")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.3) +
scale_size(range = c(1, 8), name="Log Book Count") +
scale_color_viridis(discrete = TRUE , option = "C")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.4) +
scale_size(range = c(1, 8), name="Log Book Count") +
scale_color_viridis(discrete = TRUE , option = "C")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.5) +
scale_size(range = c(1, 8), name="Log Book Count") +
scale_color_viridis(discrete = TRUE , option = "C")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.5) +
scale_size(range = c(1, 8), name="Log Book Count") +
scale_color_viridis(discrete = TRUE , option = "C")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
theme_ipsum()+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.4) +
scale_size(range = c(1, 8), name="Log Book Count") +
scale_color_viridis(discrete = TRUE , option = "C")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
theme_ipsum()+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.5) +
scale_size(range = c(1, 8), name="Log Book Count") +
scale_color_viridis(discrete = TRUE , option = "D")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
theme_ipsum()+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.5) +
scale_size(range = c(1, 8), name="Log Book Count") +
scale_color_viridis(discrete = TRUE , option = "E")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
theme_ipsum()+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.5) +
scale_size(range = c(1, 8), name="Log Book Count") +
scale_color_viridis(discrete = TRUE , option = "F")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
theme_ipsum()+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.5) +
scale_size(range = c(1, 8), name="Log Book Count") +
scale_color_viridis(discrete = TRUE , option = "G")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
theme_ipsum()+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.5) +
scale_size(range = c(1, 8), name="Log Book Count") +
scale_color_viridis(discrete = TRUE , option = "H")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
theme_ipsum()+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.5) +
scale_size(range = c(1, 8), name="Log Book Count") +
scale_color_viridis(discrete = TRUE , option = "C")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
theme_ipsum()+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.5) +
scale_size(range = c(1, 8), name="Log Book Count") +
scale_color_viridis(discrete = TRUE , option = "C")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
theme_ipsum()+
ylab("Log Number of Users")
languages2 <-
languages %>%
mutate(log_users = log(number_of_users + 1)) %>% #lognormal transformation
filter(log_users > 0) %>% #removing programming languages with no users
mutate(log_books = log(book_count + 1)) %>% #lognormal transformation
mutate(website2 = ifelse(website == github_repo, yes = NA, no = website))  %>% #making a new website column where github_repo isn't repeated
mutate(dupes = website == github_repo) %>% #making a column to quickly navigate to the rows that have duplicate entries
mutate(score = as.factor(as.integer(!is.na(website2)) + as.integer(!is.na(github_repo)))) %>% #creating a score column that adds up whether the programming language has online resources such as a website or GitHub repo. I decided not to include Wikipedia pages in this score since it is not likely to have much information regarding how to use the language.
filter(appeared >= 1957) %>% #removing any programming languages from before 1957 since a quick Google search says that computer programming as coding came about in the late 1950s with the invention of FORTRAN, LISP and COBOL.
select(title, appeared, log_users, log_books, website2, github_repo, score, dupes, book_count) %>%
arrange(desc(log_users))
head(languages2)
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.5) +
scale_size(range = c(1, 8), name="Log Book Count") +
scale_color_viridis(discrete = TRUE , option = "C")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
theme_ipsum()+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = book_count)) +
geom_point(alpha=0.5) +
scale_size(range = c(1, 8), name="Book Count") +
scale_color_viridis(discrete = TRUE , option = "C")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
theme_ipsum()+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.5) +
scale_size(range = c(1, 8), name="Log Book Count") +
scale_color_viridis(discrete = TRUE , option = "C")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
theme_ipsum()+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = book_count)) +
geom_point(alpha=0.5) +
scale_size(range = c(1, 5), name="Book Count") +
scale_color_viridis(discrete = TRUE , option = "C")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
theme_ipsum()+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.5) +
scale_size(range = c(1, 8), name="Log Book Count") +
scale_color_viridis(discrete = TRUE , option = "C")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
theme_ipsum()+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = book_count)) +
geom_point(alpha=0.5) +
scale_size(range = c(1, 10), name="Book Count") +
scale_color_viridis(discrete = TRUE , option = "C")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
theme_ipsum()+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.5) +
scale_size(range = c(1, 8), name="Log Book Count") +
scale_color_viridis(discrete = TRUE , option = "C")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
theme_ipsum()+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = book_count)) +
geom_point(alpha=0.5) +
scale_size(range = c(1, 12), name="Book Count") +
scale_color_viridis(discrete = TRUE , option = "C")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
theme_ipsum()+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = log_books)) +
geom_point(alpha=0.5) +
scale_size(range = c(1, 12), name="Log Book Count") +
scale_color_viridis(discrete = TRUE , option = "C")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
theme_ipsum()+
ylab("Log Number of Users")
ggplot(languages2, aes(x = appeared, y = log_users, color = score, size = book_count)) +
geom_point(alpha=0.5) +
scale_size(range = c(1, 12), name="Book Count") +
scale_color_viridis(discrete = TRUE , option = "C")+
theme(legend.position="right") +
xlab("Year Programming Language Appeared")+
theme_ipsum()+
ylab("Log Number of Users")
